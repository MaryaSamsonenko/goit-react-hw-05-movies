{"version":3,"file":"static/js/467.89e732fa.chunk.js","mappings":"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","sources":["components/HomeStyle/Home.styled.js","services/apiMovies.js","components/CastCard/CastCard.styled.js","components/CastCard/CastCard.js","views/Cast.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink, Link } from 'react-router-dom';\nexport const Button = styled.button`\n  margin: 0 auto;\n  margin-top: 28px;\n  display: block;\n  padding: 12px 20px;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 22px;\n  color: #ffffff;\n  background-color: #99baed;\n  border-radius: 6px;\n  transition: all 300ms ease;\n  &:hover {\n    color: #fbb400;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  }\n`;\nexport const TrendingTitle = styled.h2`\n  font-weight: 700;\n  font-size: 22px;\n  line-height: 26px;\n  text-align: center;\n  margin-bottom: 28px;\n  color: #163561;\n`;\nexport const NotificationTitle = styled.h3`\n  font-weight: 700;\n  font-size: 22px;\n  line-height: 26px;\n  text-align: center;\n  color: #163561;\n`;\nexport const GoBackLink = styled(Link)`\n  margin-bottom: 28px;\n  display: inline-block;\n  padding: 12px 20px;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 22px;\n  color: #ffffff;\n  background-color: #99baed;\n  border-radius: 6px;\n  transition: all 300ms ease;\n  &:hover {\n    color: #fbb400;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  }\n`;\nexport const Hr = styled.hr`\n  background-color: #163561;\n`;\nexport const WrapperTitleLink = styled.div`\n  display: flex;\n  gap: 60px;\n  justify-content: center;\n  margin-bottom: 28px;\n`;\nexport const TitleLink = styled(NavLink)`\n  font-weight: 700;\n  font-size: 22px;\n  line-height: 26px;\n  transition: color 250ms linear;\n  color: #163561;\n  &.active {\n    color: #fbb400;\n  }\n`;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4249ab3b22f63bc9cae3378d32ce7e3b';\n\nexport const FetchTrendingMovies = async page => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n\n  return response.data;\n};\n\nexport const FetchSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&include_adult=false`\n  );\n  return response.data;\n};\nexport const FetchDetailsMovies = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const FetchCreditsMovies = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const FetchReviewsMovies = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  padding: 20px;\n  display: grid;\n  gap: 50px;\n  grid-template-columns: repeat(4, minmax(300px, 1fr));\n`;\nexport const CastImg = styled.img`\n  width: 300px;\n  height: 450px;\n  object-fit: cover;\n`;\nexport const CastTitle = styled.h4`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 22px;\n   color: #163561;\n   margin-top: 10px;\n  \n  }\n`;\nexport const CastText = styled.p`\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 22px;\n  color: #163561;\n margin-top: 10px;\n  }\n`;\n","import propTypes from 'prop-types';\nimport { CastList, CastImg, CastTitle, CastText } from './CastCard.styled';\n\nexport const CastCard = ({ cast }) => {\n  return (\n    <CastList>\n      {cast.map(({ profile_path, character, name, id }) => (\n        <li key={id}>\n          <div>\n            <CastImg src={profile_path} alt={name} />\n          </div>\n          <div>\n            <CastTitle>{name}</CastTitle>\n            <CastText>\n              Character:\n              <br /> {character}\n            </CastText>\n          </div>\n        </li>\n      ))}\n    </CastList>\n  );\n};\n\nCastCard.propTypes = {\n  cast: propTypes.arrayOf(propTypes.object).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { FetchCreditsMovies } from 'services/apiMovies';\nimport { CastCard } from 'components/CastCard/CastCard';\nimport { NotificationTitle } from 'components/HomeStyle/Home.styled';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        const { cast } = await FetchCreditsMovies(movieId);\n        const updatedCast = formatData(cast);\n        setCast(updatedCast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const formatData = cast => {\n      return cast.map(({ id, name, character, profile_path }) => ({\n        id: id,\n        name: name,\n        character: character,\n        profile_path: profile_path\n          ? `https://image.tmdb.org/t/p/w300/${profile_path}`\n          : 'https://vjoy.cc/wp-content/uploads/2020/10/1-36-1024x1024-1.jpg',\n      }));\n    };\n\n    fetch();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <NotificationTitle>...Loading</NotificationTitle>}\n      {error && (\n        <NotificationTitle>\n          Something went wrong, please try again\n        </NotificationTitle>\n      )}\n      {!error && !loading && cast && <CastCard cast={cast} />}\n    </>\n  );\n};\n"],"names":["Button","styled","TrendingTitle","NotificationTitle","GoBackLink","Link","Hr","WrapperTitleLink","TitleLink","NavLink","BASE_URL","API_KEY","FetchTrendingMovies","page","axios","response","data","FetchSearchMovies","query","FetchDetailsMovies","id","FetchCreditsMovies","FetchReviewsMovies","CastList","CastImg","CastTitle","CastText","CastCard","cast","map","profile_path","character","name","src","alt","Cast","movieId","useParams","useState","setCast","loading","setLoading","error","setError","useEffect","fetch","updatedCast","formatData","message"],"sourceRoot":""}