{"version":3,"file":"static/js/463.b2486bb9.chunk.js","mappings":"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","sources":["components/HomeStyle/Home.styled.js","components/Section/Section.styled.js","components/Section/Section.js","services/apiMovies.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.js","views/MovieDetails.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink, Link } from 'react-router-dom';\nexport const Button = styled.button`\n  margin: 0 auto;\n  margin-top: 28px;\n  display: block;\n  padding: 12px 20px;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 22px;\n  color: #ffffff;\n  background-color: #99baed;\n  border-radius: 6px;\n  transition: all 300ms ease;\n  &:hover {\n    color: #fbb400;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  }\n`;\nexport const TrendingTitle = styled.h2`\n  font-weight: 700;\n  font-size: 22px;\n  line-height: 26px;\n  text-align: center;\n  margin-bottom: 28px;\n  color: #163561;\n`;\nexport const NotificationTitle = styled.h3`\n  font-weight: 700;\n  font-size: 22px;\n  line-height: 26px;\n  text-align: center;\n  color: #163561;\n`;\nexport const GoBackLink = styled(Link)`\n  margin-bottom: 28px;\n  display: inline-block;\n  padding: 12px 20px;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 22px;\n  color: #ffffff;\n  background-color: #99baed;\n  border-radius: 6px;\n  transition: all 300ms ease;\n  &:hover {\n    color: #fbb400;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  }\n`;\nexport const Hr = styled.hr`\n  background-color: #163561;\n`;\nexport const WrapperTitleLink = styled.div`\n  display: flex;\n  gap: 60px;\n  justify-content: center;\n  margin-bottom: 28px;\n`;\nexport const TitleLink = styled(NavLink)`\n  font-weight: 700;\n  font-size: 22px;\n  line-height: 26px;\n  transition: color 250ms linear;\n  color: #163561;\n  &.active {\n    color: #fbb400;\n  }\n`;\n","import styled from 'styled-components';\nexport const SectionStyled = styled.section`\n  padding: 28px 0;\n`;\n","import { SectionStyled } from './Section.styled';\n\nexport const Section = ({ children }) => {\n  return <SectionStyled>{children}</SectionStyled>;\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4249ab3b22f63bc9cae3378d32ce7e3b';\n\nexport const FetchTrendingMovies = async page => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n\n  return response.data;\n};\n\nexport const FetchSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&include_adult=false`\n  );\n  return response.data;\n};\nexport const FetchDetailsMovies = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const FetchCreditsMovies = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const FetchReviewsMovies = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const WrapperCard = styled.div`\n  display: flex;\n`;\n\nexport const MovieContentWrapper = styled.div`\n  padding: 20px;\n`;\n\nexport const MoviePoster = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const MovieTitle = styled.h3`\n  margin-bottom: 10px;\n  font-weight: 500;\n  font-size: 28px;\n  line-height: 34px;\n  text-transform: capitalize;\n  color: #163561;\n`;\n\nexport const MovieSubtitle = styled.h4`\n  margin-bottom: 10px;\n  font-weight: 400;\n  font-size: 24px;\n  line-height: 29px;\n  color: #163561;\n`;\n\nexport const MovieText = styled.p`\n  margin-bottom: 10px;\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 24px;\n  color: #163561;\n  opacity: 0.9;\n`;\n","import propTypes from 'prop-types';\nimport {\n  WrapperCard,\n  MovieContentWrapper,\n  MoviePoster,\n  MovieTitle,\n  MovieSubtitle,\n  MovieText,\n} from './MovieCard.styled';\nexport const MovieCard = ({\n  movie: { title, poster_path, release_date, vote_average, overview, genres },\n}) => {\n  return (\n    <WrapperCard>\n      <div>\n        <MoviePoster src={poster_path} alt={title} />\n      </div>\n      <MovieContentWrapper>\n        <MovieTitle>\n          {title} ({release_date})\n        </MovieTitle>\n        <MovieText>User score: {vote_average}</MovieText>\n        <MovieSubtitle>Overview</MovieSubtitle>\n        <MovieText>{overview}</MovieText>\n        <MovieSubtitle>Genres</MovieSubtitle>\n        <MovieText>{genres.join(', ')}</MovieText>\n      </MovieContentWrapper>\n    </WrapperCard>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: propTypes.object.isRequired,\n};\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { FetchDetailsMovies } from 'services/apiMovies';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { Container } from 'components/Container/Container';\nimport { Section } from 'components/Section/Section';\nimport {\n  GoBackLink,\n  Hr,\n  NotificationTitle,\n  TitleLink,\n  WrapperTitleLink,\n} from 'components/HomeStyle/Home.styled';\n\nexport const MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        const movie = await FetchDetailsMovies(movieId);\n        const updatedMovie = formatData(movie);\n        setMovie(updatedMovie);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const formatData = ({\n      poster_path,\n      release_date,\n      vote_average,\n      genres,\n      overview,\n      title,\n      id,\n    }) => {\n      const updatedMovie = {\n        poster_path: poster_path\n          ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n          : 'https://www.kinonews.ru/images2/noposter160x213.jpg',\n        release_date: release_date.slice(0, 4),\n        vote_average: vote_average * 10,\n        genres: genres.map(genre => genre.name),\n        overview: overview,\n        title: title,\n        id: id,\n      };\n\n      return updatedMovie;\n    };\n\n    fetch();\n  }, [movieId]);\n\n  return (\n    <>\n      <Section>\n        <Container>\n          <GoBackLink to={location?.state?.from ?? '/'}>Go back</GoBackLink>\n          {loading && <NotificationTitle>...Loading</NotificationTitle>}\n          {error && (\n            <NotificationTitle>\n              Something went wrong, please try again\n            </NotificationTitle>\n          )}\n          {!error && !loading && movie && <MovieCard movie={movie} />}\n        </Container>\n      </Section>\n      <Hr />\n      <Section>\n        <Container>\n          <WrapperTitleLink>\n            <TitleLink state={{ from: location?.state?.from }} to={'cast'}>\n              Cast\n            </TitleLink>\n            <TitleLink state={{ from: location?.state?.from }} to={'reviews'}>\n              Reviews\n            </TitleLink>\n          </WrapperTitleLink>\n          <Outlet />\n        </Container>\n      </Section>\n    </>\n  );\n};\n"],"names":["Button","styled","TrendingTitle","NotificationTitle","GoBackLink","Link","Hr","WrapperTitleLink","TitleLink","NavLink","SectionStyled","Section","children","BASE_URL","API_KEY","FetchTrendingMovies","page","axios","response","data","FetchSearchMovies","query","FetchDetailsMovies","id","FetchCreditsMovies","FetchReviewsMovies","WrapperCard","MovieContentWrapper","MoviePoster","MovieTitle","MovieSubtitle","MovieText","MovieCard","movie","title","poster_path","release_date","vote_average","overview","genres","src","alt","join","MovieDetails","location","useLocation","movieId","useParams","useState","setMovie","loading","setLoading","error","setError","useEffect","fetch","updatedMovie","formatData","message","slice","map","genre","name","Container","to","state","from"],"sourceRoot":""}